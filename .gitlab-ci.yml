#todo add comments
stages:
  - kek
  - node-build
  - test
  - docker-build-and-push

kek:
  stage: kek
  image: ubuntu

  before_script:
    ##
    ## Install ssh-agent if not already installed, it is required by Docker.
    ## (change apt-get to yum if you use an RPM-based image)
    ##
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'

    ##
    ## Run ssh-agent (inside the build environment)
    ##
    - eval $(ssh-agent -s)

    ##
    ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    ## We're using tr to fix line endings which makes ed25519 keys work
    ## without extra base64 encoding.
    ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
    ##
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

    ##
    ## Create the SSH directory and give it the right   permissions
    ##
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - ssh root@194.87.248.220 ls
    - ls

node-build:
 image: node:10.23.1-alpine
 stage: node-build
 script:
   - npm run get-dependencies --prefix app
   - npm run client:build --prefix app
 cache:
   key: node-cache
   paths:
     - app/node_modules/
     - app/client/node_modules/
 artifacts:
   paths:
     - app/build/
   expire_in: 5 min

test:
  image: node:10.23.1-alpine
  stage: test
  cache:
    key: node-cache
    paths:
      - app/node_modules/
      - app/client/node_modules/
  script:
    - npm run test --prefix app/client

docker-build-and-push:
 image: docker:latest
 stage: docker-build-and-push
 cache:
   key: node-cache
   paths:
     - app/node_modules/
 services:
   - docker:dind
 script:
   - ls app
   - rm -rf app/client/
   - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
   - docker build . --tag $DOCKER_USER/app:$CI_PIPELINE_IID
   - docker push $DOCKER_USER/app:$CI_PIPELINE_IID